var touchStartClientX = 0;
var touchStartClientY = 0;
var touchEndClientX = 0;
var touchEndClientY = 0;
var startY = 0;
var sliderFirstPointX = 0;
var sliderLastOffsetX = 0;
var autoSlideTimer = null;
var tempSlideTimer = null;
var st = {};

var touchstart = function (event, instance) {
  var touch = event.touches[0];
  touchStartClientX = touch.clientX;
  touchStartClientY = touch.clientY;
  startY = touch.pageY;

  // 暂定自动滚动
  instance.clearTimeout(tempSlideTimer);
  autoSlideTimer = null;

  sliderFirstPointX = touch.clientX;
  sliderLastOffsetX = st.offsetX;
}
var touchmove = function (event, instance) {
  var touch = event.touches[0];

  touchEndClientX = touch.clientX;
  touchEndClientY = touch.clientY;

  var detalY = touch.pageY - startY * 1;
  if (Math.abs(detalY) < 50) {
    //禁止上下滑动
    instance.callMethod("canScroll", false);
  }

  // 让轮播图跟着指头滑动
  var moveX = sliderLastOffsetX + (touch.clientX - sliderFirstPointX);
  onSlide(instance, moveX);
}
var touchend = function (event, instance) {
  instance.callMethod("canScroll", true);
  if (touchEndClientX === 0 || touchStartClientX === 0) return;

  var dx = touchEndClientX - touchStartClientX;
  var absDx = Math.abs(dx);
  var dy = touchEndClientY - touchStartClientY;
  var absDy = Math.abs(dy);

  if (Math.max(absDx, absDy) > 10) {
    var direction = absDx > absDy ? (dx > 0 ? 1 : 3) : dy > 0 ? 2 : 0;
    // 0上; 1 右; 2 下; 3 左
    instance.callMethod("changeDirection", { direction });

    // if (direction == 3) {
    //   st.speed = -(Math.abs(st.speed));
    // } else if (direction == 1) {
    //   st.speed = Math.abs(st.speed);
    // }
  }
  touchEndClientX = 0;
  touchEndClientY = 0;

  // 继续开启自动滚动
  tempSlideTimer = instance.setTimeout(function () {
    onAutoSlide(instance);
    instance.clearTimeout(tempSlideTimer);
  }, 2000)
}
var scrollWidthObserver = function (newValue, oldValue, ownerInstance, instance) {
  var dataset = instance.getDataset();

  st.offsetWidth = newValue;
  st.speed = dataset.speed;

  if (newValue > 0) {
    onAutoSlide(instance);
  }
}
var onAutoSlide = function (instance) {
  autoSlideTimer = instance.requestAnimationFrame(function fn() {
    onSlide(instance);
    if (autoSlideTimer) {
      instance.requestAnimationFrame(fn);
    }
  });
}
var onSlide = function (instance, moveX = 0) {
  var offsetX = st.offsetX || 0;
  var offsetWidth = st.offsetWidth;
  var speed = -Number(st.speed);
  var _offsetX = moveX || offsetX;

  // 滚动到左边界，处理无缝滚动
  if (_offsetX > 0) {
    _offsetX = -(offsetWidth / 2);
  }

  // 滚动到右边界，处理无缝滚动
  if (_offsetX < -(offsetWidth / 2)) {
    _offsetX = 0;
  }

  st.offsetX = _offsetX + (moveX == 0 ? speed : 0);
  instance.setStyle({
    transform: "translateX(" + st.offsetX + "px)"
  })
}

module.exports = {
  touchstart: touchstart,
  touchmove: touchmove,
  touchend: touchend,
  scrollWidthObserver: scrollWidthObserver,
}
